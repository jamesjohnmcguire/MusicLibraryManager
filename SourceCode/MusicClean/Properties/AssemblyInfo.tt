<#@ template language="C#" hostSpecific="True" debug="true" #>
<#@ output extension="cs" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#
	int major = 0;
	int minor = 0;
	int build = 0;
	int revision = 0;

	try
	{
		string file = this.Host.ResolvePath("AssemblyInfo.cs");
		string output = File.ReadAllText(file);

		string pattern = "AssemblyVersion\\(\"(?<major>\\d+)\\." +
			"(?<minor>\\d+)\\.(?<revision>\\d+)\\.(?<build>\\d+)\"\\)";

		Regex regex = new Regex(pattern);
		MatchCollection matches = regex.Matches(output);

		if (matches.Count > 0)
		{
			major = Convert.ToInt32(matches[0].Groups["major"].Value);
			minor = Convert.ToInt32(matches[0].Groups["minor"].Value);
			revision = Convert.ToInt32(matches[0].Groups["revision"].Value);

			string configuration = this.Host.ResolveParameterValue(
				"-","-","BuildConfiguration");

			if (configuration == "Release")
			{
				revision++;
			}

			build = Convert.ToInt32(matches[0].Groups["build"].Value) + 1;
		}
	}
	catch
	{
		revision = 0; 
	}
#>
/////////////////////////////////////////////////////////////////////////////
// <copyright file="AssemblyInfo.cs" company="Digital Zen Works">
// Copyright © 2019 - 2020 Digital Zen Works. All Rights Reserved.
// </copyright>
/////////////////////////////////////////////////////////////////////////////

using System.Reflection;
using System.Resources;

[assembly: AssemblyTitle("")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("James John McGuire")]
[assembly: AssemblyCopyright("Copyright © 2019 - 2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
[assembly: NeutralResourcesLanguage("en-US")]

[assembly: AssemblyVersion("<#= major #>.<#= minor #>.<#= revision #>.<#= build #>")]
